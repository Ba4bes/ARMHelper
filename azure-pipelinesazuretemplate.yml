parameters:
  platform: ''

steps:
- task: AzurePowerShell@4
  displayName: 'Pester testing with Azure -v4 ${{ parameters.platform }}'
  inputs:
    azureSubscription: AzureConnection
    ScriptType: InlineScript
    Inline: |
      $outputFile = "$(Build.SourcesDirectory)\TEST-RESULTS.xml"
      Invoke-Pester -Script '$(Build.SourcesDirectory)\Tests\AzureTesting\pipelinetest.ps1' -OutputFile $outputFile -OutputFormat NUnitXml -enableExit
    FailOnStandardError: false
    azurePowerShellVersion: LatestVersion

- task: AzurePowerShell@3
  displayName: 'Pester testing with Azure - v3 ${{ parameters.platform }}'
  inputs:
    azureSubscription: AzureConnection
    ScriptType: InlineScript
    Inline: |
      $outputFile = "$(Build.SourcesDirectory)\TEST-RESULTS.xml"
      Invoke-Pester -Script '$(Build.SourcesDirectory)\Tests\AzureTesting\pipelinetest.ps1' -OutputFile $outputFile -OutputFormat NUnitXml -enableExit
    FailOnStandardError: false
    azurePowerShellVersion: LatestVersion

- task: PublishTestResults@2
  displayName: 'Publish Online Test Results ${{ parameters.platform }}'
  inputs:
    testRunTitle: 'online Pester Results Azure ${{ parameters.platform }}'
    buildPlatform: 'Azure ${{ parameters.platform }}'
    testRunner: 'NUnit'
    testResultsFiles: './TEST-RESULTS.xml'
    failTaskOnFailedTests: true
