steps:
- powershell: |
    Install-Module -Name Pester -Force -Scope CurrentUser -SkipPublisherCheck
    Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser
    Import-Module "$(Build.SourcesDirectory)\ARMHelper" -Force
  displayName: 'Install Pester and import module'
- powershell: |
    $outputFile = ".\TEST-RESULTS.xml"
    Invoke-Pester -Tag Mock, Module -OutputFile $outputFile -OutputFormat NUnitXml -enableExit
  failOnStderr: false
  continueOnError: true
  displayName: 'Invoke-Pester without Azure'
- task: PublishTestResults@2
  displayName: 'Publish Online Test Results'
  inputs:
    testRunTitle: 'Offline Pester Results $(platform)'
    buildPlatform: 'Windows'
    testRunner: 'NUnit'
    testResultsFiles: './TEST-RESULTS.xml'
    failTaskOnFailedTests: true
- task: AzurePowerShell@3
  displayName: 'Pester testing with Azure'
  inputs:
    azureSubscription: AzureConnection
    ScriptType: InlineScript
    Inline: |
      $outputFile = "$(Build.SourcesDirectory)\TEST-RESULTS.xml"
      Invoke-Pester -Script @{
      Path =  '$(Build.SourcesDirectory)\Tests\AzureTesting\pipelinetest.ps1'
      Parameters = @{
      TemplatePath = '$(Build.SourcesDirectory)\Tests\AzureTesting'
      }
      } -OutputFile $outputFile -OutputFormat NUnitXml -enableExit
    FailOnStandardError: false
    azurePowerShellVersion: LatestVersion
- task: PublishTestResults@2
  displayName: 'Publish Offline Test Results'
  inputs:
    testRunTitle: 'online Pester Results $(platform)'
    buildPlatform: 'Windows'
    testRunner: 'NUnit'
    testResultsFiles: './TEST-RESULTS.xml'
    failTaskOnFailedTests: true
